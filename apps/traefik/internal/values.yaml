---
globalArguments:
  - "--global.sendanonymoususage=false"
  - "--global.checknewversion=false"

additionalArguments:
  - "--serversTransport.insecureSkipVerify=true"

ingressRoute:
  dashboard:
    enabled: true
    # Custom match rule with host domain
    matchRule: Host(`traefik.devirthas.com`)
    entryPoints: ["websecure"]
    # Add custom middlewares : authentication and redirection
    middlewares:
      - name: traefik-dashboard-auth

extraObjects:
  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: traefik-dashboard-auth
    spec:
      basicAuth:
        secret: traefik-dashboard-auth-secret

providers:
  kubernetesIngress:
    ingressClass: traefik-internal
  kubernetesCRD:
    namespaces:
      - traefik-external

ingressClass:
  enabled: true
  isDefaultClass: true

api:
  dashboard: true

service:
  type: LoadBalancer
  spec:
    loadBalancerIP: 192.168.8.40
  loadBalancerSourceRanges:
    - 192.168.0.0/16   # доступ только из LAN

ports:
  web:
    expose:
      default: true
    exposedPort: 80
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true
  websecure:
    expose:
      default: true
    exposedPort: 443
    tls:
      enabled: true
  traefik:
    expose:
      default: true  # create Service port for the dashboard/API
    exposedPort: 9000
    protocol: TCP
logs:
  general:
    level: DEBUG
